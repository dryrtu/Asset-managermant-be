image: openshift/origin-cli

stages:
  - build 
  - test
  - deploy 
  - review
  - develop
  - staging
  - uat
  - production
#  - cleanup

variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
 
cache:
  paths:
    - .m2/repository

.validate: &validate
  stage: build
  script:
    - 'mvn $MAVEN_CLI_OPTS test-compile'

.verify: &verify
  stage: test
  script:
#    - 'mvn verify'
    - 'mvn package -DskipTests' # temporarily ignored test
  artifacts:
    paths:
      - target/
    expire_in: 60 min

develop:validate:jdk8:
  <<: *validate
  image: maven:3.3.9-jdk-8
  only:
    - develop
  when: manual

develop:verify:jdk8:
  <<: *verify
  image: maven:3.3.9-jdk-8
  needs:
    - develop:validate:jdk8
  only:
    - develop

validate:jdk8:
  <<: *validate
  image: maven:3.3.9-jdk-8
  only:
    - master
    - /uat-v[0-9][.][0-9][.][0-9]+/

verify:jdk8:
  <<: *verify
  image: maven:3.3.9-jdk-8
  only:
    - master
    - /uat-v[0-9][.][0-9][.][0-9]+/

.deploy: &deploy
  before_script:
    - oc login "$OPENSHIFT_IP:$OPENSHIFT_PORT" --token="$OPENSHIFT_TOKEN" --insecure-skip-tls-verify
    - oc project "$PROJECT_NAME"
  script:
    - "mkdir -p artifact"
    - "cp ./target/*.war ./artifact/"
    - "cp $DOCKER_FILE_NAME ./artifact/Dockerfile"
    - "oc get services $APP 2> /dev/null || oc new-app ./artifact --name=$APP --strategy=docker"
    - "oc start-build $APP --from-dir=./artifact --follow || sleep 3s && oc start-build $APP --from-dir=./artifact --follow"
    - "oc get routes $APP 2> /dev/null || oc expose service $APP"
    - "rm -rf ./target/* && rm -rf ./artifact/*"

# review:
#   <<: *deploy
#   stage: review
#   variables:
#     APP: $CI_PROJECT_NAME-$CI_COMMIT_REF_NAME-dev
#     APP_HOST: $CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$OPENSHIFT_DOMAIN
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     url: http://$CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$OPENSHIFT_DOMAIN
# #    on_stop: stop-review
#   only:
#     - branches
#   except:
#     - master

# stop-review:
#   <<: *deploy
#   stage: cleanup
#   script:
#     - oc delete all -l "app=$APP"
#   when: manual
#   variables:
#     APP: $CI_PROJECT_NAME-$CI_COMMIT_REF_NAME-dev
#     GIT_STRATEGY: none
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     action: stop
#   only:
#     - branches
#   except:
#     - master

develop:
  <<: *deploy
  stage: develop
  needs:
    - develop:verify:jdk8
  variables:
    APP: idnes-asset-management-be-dev
    APP_HOST: idnes-asset-management-be-staging.$OPENSHIFT_DOMAIN
    PROJECT_NAME: $OPENSHIFT_PROJECT_DEV
    DOCKER_FILE_NAME: Dockerfile
  environment:
    name: develop
    url: http://idnes-asset-management-be-staging.$OPENSHIFT_DOMAIN
  only:
    - develop

staging:
  <<: *deploy
  stage: staging
  variables:
    APP: idnes-asset-management-be-test
    APP_HOST: idnes-asset-management-be-test.$OPENSHIFT_DOMAIN
    PROJECT_NAME: $OPENSHIFT_PROJECT
    DOCKER_FILE_NAME: Dockerfile_test
  environment:
    name: staging
    url: http://idnes-asset-management-be-staging.$OPENSHIFT_DOMAIN
  only:
    - master

uat:
  <<: *deploy
  stage: uat
  variables:
    APP: idnes-asset-management-be-uat
    APP_HOST: idnes-asset-management-be.$OPENSHIFT_DOMAIN
    PROJECT_NAME: $OPENSHIFT_PROJECT_UAT
    DOCKER_FILE_NAME: Dockerfile_uat
  environment:
    name: uat
    url: http://idnes-asset-management-be$OPENSHIFT_DOMAIN
  only:
    - /uat-v[0-9][.][0-9][.][0-9]+/
  when: manual

# production:
#   <<: *deploy
#   stage: production
#   variables:
#     APP: $CI_PROJECT_NAME-$CI_COMMIT_REF_NAME-prod
#     APP_HOST: $CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
#   when: manual
#   environment:
#     name: production
#     url: http://$CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
#   only:
#     - master
